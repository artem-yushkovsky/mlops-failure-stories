apiVersion: v1
kind: ServiceAccount
metadata:
  name: auto-deployer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: auto-deployer-role
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: auto-deployer-rolebinding
subjects:
- kind: ServiceAccount
  name: auto-deployer
roleRef:
  kind: Role
  name: auto-deployer-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auto-deployer
  labels:
    app: mlops-af-auto-deployer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlops-af-auto-deployer
  template:
    metadata:
      labels:
        app: mlops-af-auto-deployer
    spec:
      serviceAccountName: auto-deployer
      containers:
        - name: main
          image: python:3.7
          env:
            - name: GIT_REPO
              value: https://github.com/artem-yushkovsky/mlops-failure-stories.git
          command: ["/bin/sh", "-c"]
          args:
            - curl -LO "https://dl.k8s.io/release/v1.20.4/bin/linux/amd64/kubectl"
              && chmod u+x kubectl 
              && mv kubectl /bin/kubectl
              && REF=""
              && while true; do
                date
                && NEW_REF=$(git ls-remote --heads --quiet ${GIT_REPO} master | tee /dev/stderr | cut -f1)
                && [ "$NEW_REF" != "$REF" ]
                && kubectl rollout restart deployment.apps/mlops-af
                ; REF=$NEW_REF
                ; sleep 10m;
              done
